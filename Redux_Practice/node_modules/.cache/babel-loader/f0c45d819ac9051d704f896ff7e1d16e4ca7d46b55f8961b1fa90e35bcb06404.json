{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst rdxtoolkit = createSlice({\n  name: 'counter',\n  initialState: {\n    counter: 0,\n    showCounter: true\n  },\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increasevalue(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const reducer=(state={counter:0,showCounter:true},action)=>{\n//   if(action.type==='increment')\n//   {\n//     return {\n//       counter:state.counter+1,\n//       showCounter:state.showCounter\n//     }\n//   }\n//   if(action.type==='increasevalue')\n//   {\n//     return {\n//       counter:state.counter+action.amount,\n//       showCounter:state.showCounter\n//     }\n//   }\n//   if(action.type==='showCounter'){\n//     return {\n//       counter:state.counter,\n//       showCounter:!state.showCounter\n//     }\n//   }\n//   if(action.type==='decrement')\n//   {\n//     return {\n//       counter:state.counter-1,\n//       showCounter:state.showCounter\n//     }\n//   }\n//   return state;\n// }\nconst authenticate = createSlice({\n  name: 'Auth',\n  initialState: {\n    Authentication: false\n  },\n  reducers: {\n    login(state) {\n      state.Authentication = true;\n    },\n    logout(state) {\n      state.Authentication = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: rdxtoolkit.reducer,\n    auth: authenticate.reducer\n  }\n});\n// const store=createStore(reducer);\n\nexport const counterActions = rdxtoolkit.actions;\nexport const authActions = authenticate.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","rdxtoolkit","name","initialState","counter","showCounter","reducers","increment","state","decrement","increasevalue","action","payload","toggleCounter","authenticate","Authentication","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/React Project/10th project/01-starting-project/src/Store/redux.js"],"sourcesContent":["// import { createStore } from 'redux';\r\nimport { createSlice,configureStore } from '@reduxjs/toolkit';\r\n\r\nconst rdxtoolkit=createSlice({\r\n  name:'counter',\r\n  initialState:{counter:0,showCounter:true},\r\n  reducers:{\r\n    increment(state){\r\n      state.counter++\r\n    },\r\n    decrement(state){\r\n      state.counter--\r\n    },\r\n    increasevalue(state,action){\r\n      state.counter=state.counter+action.payload\r\n    },\r\n    toggleCounter(state){\r\n      state.showCounter=!state.showCounter;\r\n    }\r\n  }\r\n})\r\n\r\n// const reducer=(state={counter:0,showCounter:true},action)=>{\r\n//   if(action.type==='increment')\r\n//   {\r\n//     return {\r\n//       counter:state.counter+1,\r\n//       showCounter:state.showCounter\r\n//     }\r\n//   }\r\n//   if(action.type==='increasevalue')\r\n//   {\r\n//     return {\r\n//       counter:state.counter+action.amount,\r\n//       showCounter:state.showCounter\r\n//     }\r\n//   }\r\n//   if(action.type==='showCounter'){\r\n//     return {\r\n//       counter:state.counter,\r\n//       showCounter:!state.showCounter\r\n//     }\r\n//   }\r\n//   if(action.type==='decrement')\r\n//   {\r\n//     return {\r\n//       counter:state.counter-1,\r\n//       showCounter:state.showCounter\r\n//     }\r\n//   }\r\n//   return state;\r\n// }\r\nconst authenticate=createSlice({\r\n  name:'Auth',\r\n  initialState:{Authentication:false},\r\n  reducers:{\r\n    login(state){\r\n      state.Authentication=true;\r\n    },\r\n    logout(state){\r\n      state.Authentication=false;\r\n    }\r\n  }\r\n})\r\nconst store=configureStore({reducer:{counter:rdxtoolkit.reducer,auth:authenticate.reducer}});\r\n// const store=createStore(reducer);\r\n\r\nexport const counterActions=rdxtoolkit.actions;\r\nexport const authActions=authenticate.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAACC,cAAc,QAAQ,kBAAkB;AAE7D,MAAMC,UAAU,GAACF,WAAW,CAAC;EAC3BG,IAAI,EAAC,SAAS;EACdC,YAAY,EAAC;IAACC,OAAO,EAAC,CAAC;IAACC,WAAW,EAAC;EAAI,CAAC;EACzCC,QAAQ,EAAC;IACPC,SAASA,CAACC,KAAK,EAAC;MACdA,KAAK,CAACJ,OAAO,EAAE;IACjB,CAAC;IACDK,SAASA,CAACD,KAAK,EAAC;MACdA,KAAK,CAACJ,OAAO,EAAE;IACjB,CAAC;IACDM,aAAaA,CAACF,KAAK,EAACG,MAAM,EAAC;MACzBH,KAAK,CAACJ,OAAO,GAACI,KAAK,CAACJ,OAAO,GAACO,MAAM,CAACC,OAAO;IAC5C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAClBA,KAAK,CAACH,WAAW,GAAC,CAACG,KAAK,CAACH,WAAW;IACtC;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMS,YAAY,GAACf,WAAW,CAAC;EAC7BG,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC;IAACY,cAAc,EAAC;EAAK,CAAC;EACnCT,QAAQ,EAAC;IACPU,KAAKA,CAACR,KAAK,EAAC;MACVA,KAAK,CAACO,cAAc,GAAC,IAAI;IAC3B,CAAC;IACDE,MAAMA,CAACT,KAAK,EAAC;MACXA,KAAK,CAACO,cAAc,GAAC,KAAK;IAC5B;EACF;AACF,CAAC,CAAC;AACF,MAAMG,KAAK,GAAClB,cAAc,CAAC;EAACmB,OAAO,EAAC;IAACf,OAAO,EAACH,UAAU,CAACkB,OAAO;IAACC,IAAI,EAACN,YAAY,CAACK;EAAO;AAAC,CAAC,CAAC;AAC5F;;AAEA,OAAO,MAAME,cAAc,GAACpB,UAAU,CAACqB,OAAO;AAC9C,OAAO,MAAMC,WAAW,GAACT,YAAY,CAACQ,OAAO;AAE7C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}