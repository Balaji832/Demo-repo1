{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Project\\\\8th project\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setmovies] = useState([]);\n  const [loading, setloading] = useState(false);\n  let dummyMovies = {};\n  async function movieHandler() {\n    setloading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    dummyMovies = data.results.map(Element => {\n      return {\n        id: Element.episode_id,\n        title: Element.title,\n        openingText: Element.opening_crawl,\n        releaseDate: Element.release_date\n      };\n    });\n    setmovies(dummyMovies);\n    setloading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: movieHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!loading && movies.length == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No moives found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 42\n      }, this), !loading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 41\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xl19lDF8+dbKBFmiv0D07wwwHHU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setmovies","loading","setloading","dummyMovies","movieHandler","response","fetch","data","json","results","map","Element","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/React Project/8th project/01-starting-project/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n const [movies,setmovies] =useState([]);\n const [loading,setloading] =useState(false);\n\n  let dummyMovies={};\n\n  async function movieHandler()\n  {\n    setloading(true);\n    const response=await fetch('https://swapi.dev/api/films/')\n    const data=await response.json()\n\n    dummyMovies = data.results.map(Element=>{\n                  return {id:Element.episode_id,\n                          title:Element.title,\n                          openingText:Element.opening_crawl,\n                          releaseDate:Element.release_date}})\n    setmovies(dummyMovies);\n    setloading(false);\n\n  }\n \n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={movieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!loading && movies.length==0 && <p>No moives found</p> }\n        {!loading && movies.length>0 && <MoviesList movies={movies} />}\n        {loading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAEpC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAEP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAACC,UAAU,CAAC,GAAET,QAAQ,CAAC,KAAK,CAAC;EAE1C,IAAIU,WAAW,GAAC,CAAC,CAAC;EAElB,eAAeC,YAAYA,CAAA,EAC3B;IACEF,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMG,QAAQ,GAAC,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC1D,MAAMC,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAEhCL,WAAW,GAAGI,IAAI,CAACE,OAAO,CAACC,GAAG,CAACC,OAAO,IAAE;MAC1B,OAAO;QAACC,EAAE,EAACD,OAAO,CAACE,UAAU;QACrBC,KAAK,EAACH,OAAO,CAACG,KAAK;QACnBC,WAAW,EAACJ,OAAO,CAACK,aAAa;QACjCC,WAAW,EAACN,OAAO,CAACO;MAAY,CAAC;IAAA,CAAC,CAAC;IACzDlB,SAAS,CAACG,WAAW,CAAC;IACtBD,UAAU,CAAC,KAAK,CAAC;EAEnB;EAEA,oBACEN,OAAA,CAACJ,KAAK,CAAC2B,QAAQ;IAAAC,QAAA,gBACbxB,OAAA;MAAAwB,QAAA,eACExB,OAAA;QAAQyB,OAAO,EAAEjB,YAAa;QAAAgB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACV7B,OAAA;MAAAwB,QAAA,GACG,CAACnB,OAAO,IAAIF,MAAM,CAAC2B,MAAM,IAAE,CAAC,iBAAI9B,OAAA;QAAAwB,QAAA,EAAG;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACtD,CAACxB,OAAO,IAAIF,MAAM,CAAC2B,MAAM,GAAC,CAAC,iBAAI9B,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC7DxB,OAAO,iBAAIL,OAAA;QAAAwB,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC3B,EAAA,CAlCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}